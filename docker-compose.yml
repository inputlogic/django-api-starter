services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 1s
      retries: 10

  redis:
    image: redis
    volumes:
      - ./.data/redis:/data

  migrations:
    build: . 
    command: sh -c "python manage.py migrate &&
                    python manage.py loaddata fixtures/admin.json &&
                    python manage.py loaddata fixtures/mail.json"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  web:
    build: . 
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully

  workers:
    build: .
    command: sh -c "celery -A project worker -B -l INFO"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    volumes:
      - .:/app
    depends_on:
      migrations:
        condition: service_completed_successfully
