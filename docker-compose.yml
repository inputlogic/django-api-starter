services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  migrations:
    build: . 
    command: ['python', 'manage.py', 'migrate']
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  web:
    build: . 
    command: ['python', 'manage.py', 'runserver_plus', '0.0.0.0:8000']
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully

  workers:
    build: . 
    command: ['python', 'manage.py', 'runworkers']
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
    volumes:
      - .:/app
    depends_on:
      migrations:
        condition: service_completed_successfully
